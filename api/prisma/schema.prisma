generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String             @id
  nama      String
  username  String             @unique
  email     String             @unique
  password  String
  role      String
  members   Member[]
  penugasan Penugasan[]        @relation("PenugasanUser")
  createdPenugasan Penugasan[] @relation("PenugasanCreator")
  laporan   LaporanHarian[]
  tambahan  KegiatanTambahan[]
  notifications Notification[]
}

model Team {
  id               String             @id
  namaTim          String
  members          Member[]
  masterKegiatan   MasterKegiatan[]
  KegiatanTambahan KegiatanTambahan[]
}

model Member {
  id       String  @id
  userId   String
  teamId   String
  isLeader Boolean
  user     User    @relation(fields: [userId], references: [id])
  team     Team    @relation(fields: [teamId], references: [id])

  @@unique([userId, teamId])
}

model MasterKegiatan {
  id               String             @id
  teamId           String
  namaKegiatan     String
  deskripsi        String?
  team             Team               @relation(fields: [teamId], references: [id])
  penugasan        Penugasan[]
  KegiatanTambahan KegiatanTambahan[]
}

model Penugasan {
  id         String          @id
  kegiatanId String
  pegawaiId  String
  creatorId  String
  minggu     Int
  bulan      String
  tahun      Int
  deskripsi  String?
  status     String          @default("Belum")
  kegiatan   MasterKegiatan  @relation(fields: [kegiatanId], references: [id])
  pegawai    User            @relation(name: "PenugasanUser", fields: [pegawaiId], references: [id])
  creator    User            @relation(name: "PenugasanCreator", fields: [creatorId], references: [id])
  laporan    LaporanHarian[]
}

model LaporanHarian {
  id          String    @id
  penugasanId String?
  tambahanId  String?
  tanggal     DateTime
  status      String
  capaianKegiatan String @default("")
  deskripsi   String?
  buktiLink   String?
  catatan     String?
  pegawaiId   String
  penugasan   Penugasan?        @relation(fields: [penugasanId], references: [id])
  tambahan    KegiatanTambahan? @relation(fields: [tambahanId], references: [id])
  pegawai     User             @relation(fields: [pegawaiId], references: [id])
}

model KegiatanTambahan {
  id                  String         @id
  nama                String
  tanggal             DateTime
  status              String
  capaianKegiatan     String @default("")
  buktiLink           String?
  deskripsi           String?
  tanggalSelesai      DateTime?
  tanggalSelesaiAkhir DateTime?
  userId              String
  kegiatanId          String
  teamId              String
  user                User           @relation(fields: [userId], references: [id])
  kegiatan            MasterKegiatan @relation(fields: [kegiatanId], references: [id])
  team                Team           @relation(fields: [teamId], references: [id])
  laporan             LaporanHarian[]
}

model Role {
  id   String @id
  name String @unique
}

model Notification {
  id        String   @id
  userId    String
  text      String
  link      String?
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}
